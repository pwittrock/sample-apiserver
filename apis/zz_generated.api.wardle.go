/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by genwiring. Do not edit it manually!

package apis

import (
	"github.com/pwittrock/apiserver-helloworld/apis/wardle"
	"github.com/pwittrock/apiserver-helloworld/apis/wardle/v1alpha1"
	"k8s.io/apimachinery/pkg/apimachinery/announced"
	"k8s.io/apimachinery/pkg/runtime"
	"k8s.io/apimachinery/pkg/runtime/schema"
	"k8s.io/apiserver-builder/pkg/defaults"
	"k8s.io/apiserver/pkg/storage/names"
)

// Use the default strategy.  To override - in another file - define the struct FlunderStrategy and regenerate code
var singletonFlunderStrategy = &DefaultFlunderStrategy{
	defaults.BasicCreateDeleteUpdateStrategy{defaults.Scheme, names.SimpleNameGenerator},
}

// Default Strategy for Flunder
type DefaultFlunderStrategy struct {
	// Inherit the basic create, delete, update strategy.
	defaults.BasicCreateDeleteUpdateStrategy
}

// NewFunc returns a new empty Flunder
func (r *DefaultFlunderStrategy) NewFunc() runtime.Object {
	return &wardle.Flunder{}
}

// NewListFunc returns a new empty List of Flunder
func (r *DefaultFlunderStrategy) NewListFunc() runtime.Object {
	return &wardle.FlunderList{}
}

// ObjectNameFunc returns the name for a Flunder
func (r *DefaultFlunderStrategy) ObjectNameFunc(obj runtime.Object) (string, error) {
	return obj.(*wardle.Flunder).Name, nil
}

// Definition used to register v1alpha1Flunder with the apiserver
var v1alpha1FlunderApiDefinition = &defaults.ResourceDefinition{
	v1alpha1.SchemeGroupVersion.WithResource("flunders"),
	singletonFlunderStrategy,
	singletonFlunderStrategy,
	singletonFlunderStrategy,
	singletonFlunderStrategy,
	singletonFlunderStrategy.BasicMatch,
}

// Order list of version preferences
var wardleVersionPreferenceOrder = []string{
	v1alpha1.SchemeGroupVersion.Version}
var wardleVersionToSchemeFunc = announced.VersionToSchemeFunc{
	v1alpha1.SchemeGroupVersion.Version: v1alpha1.AddToScheme}

type wardleProvider struct{}

func GetWardleProvider() defaults.ResourceDefinitionProvider {
	return &wardleProvider{}
}

func (w *wardleProvider) GetResourceDefinitions() []*defaults.ResourceDefinition {
	return []*defaults.ResourceDefinition{
		v1alpha1FlunderApiDefinition}
}

func (w *wardleProvider) GetLegacyCodec() []schema.GroupVersion {
	return []schema.GroupVersion{
		v1alpha1.SchemeGroupVersion}
}

func (w *wardleProvider) GetGroupName() string {
	return "wardle.k8s.io"
}

func (w *wardleProvider) GetVersionPreferenceOrder() []string {
	return wardleVersionPreferenceOrder
}

func (w *wardleProvider) GetImportPrefix() string {
	return "github.com/pwittrock/apiserver-helloworld/apis/wardle"
}

func (w *wardleProvider) SchemeFunc() announced.SchemeFunc {
	return wardle.AddToScheme
}

func (w *wardleProvider) VersionToSchemeFunc() announced.VersionToSchemeFunc {
	return wardleVersionToSchemeFunc
}
