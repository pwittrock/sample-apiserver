/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by genwiring. Do not edit it manually!

package wardle

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

var (
	// Package-wide variables from generator "zz_generated.api.register".
	registerFn = func(scheme *runtime.Scheme) error {
		scheme.AddKnownTypes(SchemeGroupVersion, &Flunder{}, &FlunderList{})
		metav1.AddToGroupVersion(scheme, SchemeGroupVersion)
		return nil
	}

	SchemeGroupVersion = schema.GroupVersion{Group, runtime.APIVersionInternal}

	SchemeBuilder = runtime.NewSchemeBuilder(registerFn)

	AddToScheme = SchemeBuilder.AddToScheme
)

const (
	// Package-wide consts from generator "zz_generated.api.register".
	Group = "wardle.k8s.io"
)

// +genclient=true

type Flunder struct {
	metav1.TypeMeta

	metav1.ObjectMeta

	Spec FlunderSpec

	Status FlunderStatus
}

type FlunderList struct {
	metav1.TypeMeta
	metav1.ListMeta
	Items []Flunder
}

type FlunderSpec struct {
}

type FlunderStatus struct {
}
