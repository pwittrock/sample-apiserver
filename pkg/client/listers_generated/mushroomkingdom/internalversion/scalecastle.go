/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package internalversion

import (
	mushroomkingdom "github.com/pwittrock/apiserver-helloworld/pkg/apis/mushroomkingdom"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ScaleCastleLister helps list ScaleCastles.
type ScaleCastleLister interface {
	// List lists all ScaleCastles in the indexer.
	List(selector labels.Selector) (ret []*mushroomkingdom.ScaleCastle, err error)
	// ScaleCastles returns an object that can list and get ScaleCastles.
	ScaleCastles(namespace string) ScaleCastleNamespaceLister
	ScaleCastleListerExpansion
}

// scaleCastleLister implements the ScaleCastleLister interface.
type scaleCastleLister struct {
	indexer cache.Indexer
}

// NewScaleCastleLister returns a new ScaleCastleLister.
func NewScaleCastleLister(indexer cache.Indexer) ScaleCastleLister {
	return &scaleCastleLister{indexer: indexer}
}

// List lists all ScaleCastles in the indexer.
func (s *scaleCastleLister) List(selector labels.Selector) (ret []*mushroomkingdom.ScaleCastle, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*mushroomkingdom.ScaleCastle))
	})
	return ret, err
}

// ScaleCastles returns an object that can list and get ScaleCastles.
func (s *scaleCastleLister) ScaleCastles(namespace string) ScaleCastleNamespaceLister {
	return scaleCastleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ScaleCastleNamespaceLister helps list and get ScaleCastles.
type ScaleCastleNamespaceLister interface {
	// List lists all ScaleCastles in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*mushroomkingdom.ScaleCastle, err error)
	// Get retrieves the ScaleCastle from the indexer for a given namespace and name.
	Get(name string) (*mushroomkingdom.ScaleCastle, error)
	ScaleCastleNamespaceListerExpansion
}

// scaleCastleNamespaceLister implements the ScaleCastleNamespaceLister
// interface.
type scaleCastleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ScaleCastles in the indexer for a given namespace.
func (s scaleCastleNamespaceLister) List(selector labels.Selector) (ret []*mushroomkingdom.ScaleCastle, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*mushroomkingdom.ScaleCastle))
	})
	return ret, err
}

// Get retrieves the ScaleCastle from the indexer for a given namespace and name.
func (s scaleCastleNamespaceLister) Get(name string) (*mushroomkingdom.ScaleCastle, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(mushroomkingdom.Resource("scalecastle"), name)
	}
	return obj.(*mushroomkingdom.ScaleCastle), nil
}
